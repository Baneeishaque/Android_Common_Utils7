# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: 'windows-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

steps:
  - checkout: self
    submodules: recursive

  - task: Cache@2
    inputs:
      key: 'gradleUserHome | "$(Agent.OS)"'
      restoreKeys: gradleUserHome
      path: $(GRADLE_USER_HOME)
    displayName: Gradle User Home Cache

  - task: Cache@2
    inputs:
      key: 'projectSpecificGradleCache | "$(Agent.OS)"'
      restoreKeys: projectSpecificGradleCache
      path: $(Build.SourcesDirectory)/.gradle
    displayName: Project Specific Gradle Cache

  - task: Cache@2
    inputs:
      key: 'projectSpecificBuildFolder | "$(Agent.OS)"'
      restoreKeys: projectSpecificBuildFolder
      path: $(Build.SourcesDirectory)/build
    displayName: Project Specific Build Folder Cache

  - task: Gradle@2
    displayName: 'Gradle build : Android Library'
    inputs:
      # TODO : Add build scan, upload build scan results
      gradleOptions: '-Xmx3072m'

  - script: 'gradlew --stop'
    displayName: Stop Gradle Daemon